{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/CardList.components.jsx","components/searchox/Searchox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","state","searchField","e","setState","target","value","fetch","then","users","json","userList","this","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,kBAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACR,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,aCJjBC,EAAW,SAACP,GACzB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OAAE,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCL9CM,G,MAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aACrC,OAAO,uBAAOC,KAAK,SAASC,YAAaH,EAAaI,SAAUH,EAAcX,UAAU,aC8B5Ee,E,4MA5BbC,MAAQ,CACNT,SAAW,GACXU,YAAc,I,EAQhBN,aAAe,SAACO,GACd,EAAKC,SAAS,CACZF,YAAaC,EAAEE,OAAOC,S,kEARN,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OAASA,EAAMC,UAAQF,MAAK,SAACG,GAAD,OAAY,EAAKP,SAAS,CAC7GZ,SAAUmB,S,+BAUL,IAAD,OACN,OACE,sBAAK1B,UAAU,MAAf,UACI,iDACA,cAAC,EAAD,CAAWa,YAAY,iBAAiBF,aAAcgB,KAAKhB,eAC3D,cAAC,EAAD,CAAUJ,SAAYoB,KAAKX,MAAMT,SAASqB,QAAO,SAAA1B,GAAO,OAAEA,EAAQE,KAAKyB,cAAcC,SAAS,EAAKd,MAAMC,YAAYY,2B,GAtB7GE,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d9b12a86.chunk.js","sourcesContent":["import React from 'react'\nimport './Card.styles.css'\n\nexport const Card = (props)=>{\n    return(\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    )\n}","import React from 'react'\nimport './CardList.styles.css'\nimport {Card} from '../card/Card.component'\n\nexport const CardList = (props)=>{\nreturn (\n    <div className=\"card-list\">\n        {\n            props.monsters.map(monster=><Card key={monster.id} monster={monster}></Card>)\n        }\n    </div>\n    )\n}","import React from 'react'\nimport './searchox.style.css'\n\nexport const SearchBox = ({placeHolder, handleChange})=>{\n   return <input type=\"search\" placeholder={placeHolder} onChange={handleChange} className=\"search\"></input>\n}","import './App.css';\nimport React from 'react'\nimport {CardList } from './components/card-list/CardList.components'\nimport {SearchBox} from './components/searchox/Searchox.component'\n\nclass App extends React.Component{\n  state = {\n    monsters : [],\n    searchField : ''\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then((users)=>users.json()).then((userList)=>this.setState({\n      monsters: userList\n    }))\n  }\n\n  handleChange = (e)=>{\n    this.setState({\n      searchField: e.target.value\n    })\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n          <h1>Monster Rolodex</h1>\n          <SearchBox placeholder=\"Search monster\" handleChange={this.handleChange}/>\n          <CardList monsters = {this.state.monsters.filter(monster=>monster.name.toLowerCase().includes(this.state.searchField.toLowerCase()))}>\n          </CardList>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}